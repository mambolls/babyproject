<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>
<configuration scan="true" scanPeriod="30 minutes" debug="false">
    <!--为了防止进程退出时，内存中的数据丢失，请加上此选项-->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <!-- 日志存储根路径 -->
    <property name="log.dir.root" value="./logs"/>
    <property name="app.name" value="babyProject"/>

    <!-- 彩色日志依赖的渲染类-spring 使用-s -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss} | %highlight(%-5level) | %boldYellow(%thread) | %boldGreen(%logger) | %msg%n"/>
    <!-- 彩色日志依赖的渲染类-spring 使用-e -->

    <!-- 控制台输出日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="utf-8"> <!-- encoder 可以指定字符集，对于中文输出有意义 -->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>




    <!-- 文件保存日志的相关配置，同步 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 保存日志文件的路径 -->
        <!--<file>${log.dir.root}/${app.name}.log</file>-->
        <!-- 日志格式 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} %-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <!-- 循环政策：基于时间创建日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${log.dir.root}/${app.name}/${app.name}_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- 最大保存时间-->
            <maxHistory>7</maxHistory>
            <maxFileSize>10MB</maxFileSize>
            <totalSizeCap>200MB</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- 下面配置一些第三方包的日志过滤级别 -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.mybatis" level="INFO"/>
    <logger name="org.apache.kafka.clients.consumer.ConsumerConfig" level="off"/>
    <logger name="org.apache.kafka.clients.producer.ProducerConfig" level="off"/>
    <logger name="org.apache.kafka.common.utils.AppInfoParser" level="off"/>
    <logger name="org.apache.kafka.clients.Metadata" level="off"/>


    <!-- 可用来获取StatusManager中的状态 -->
    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>



    <!-- 本地+开发环境. 多个使用逗号隔开. -->
        <root level="INFO">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="FILE"/>
            <!--<appender-ref ref="APPLICATION_LOG_ALIYUN_DEV"/>-->
        </root>

</configuration>
